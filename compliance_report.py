# -*- coding: utf-8 -*-
"""Compliance_Report.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nixvqMk-ISPNWlU1gAKq3-uit4Lznv4j

Weâ€™ll use Natural Language Processing (NLP) to automatically generate audit reports based on detected risks & anomalies.
"""

!pip install transformers

from transformers import pipeline
import pandas as pd

# Load high-risk tools data
df_high_risk = pd.read_csv("High_Risk_Tools.csv")

# Load Pretrained Text Generation Model
report_generator = pipeline("text-generation", model="gpt2")

# Check if there are high-risk tools
if df_high_risk.empty:
    print("\n No high-risk tools found! Adjust risk threshold if needed.")
else:
    print(f"\n Loaded {len(df_high_risk)} High-Risk Tools for Report Generation!")

# Function to Generate Reports
def generate_report(tool_name, risk_score, days_since_last_cal, months_remaining, anomaly_flag):
    prompt = f"""
    Compliance Report for {tool_name}:
    - Risk Score: {risk_score:.2f}/100
    - Days Since Last Calibration: {days_since_last_cal}
    - Months Remaining Before Next Calibration: {months_remaining}
    - Anomaly Detected: {"Yes" if anomaly_flag else "No"}

    Based on this data, the compliance risk assessment indicates:
    """

    # Generate Report
    report = report_generator(prompt, max_length=200, num_return_sequences=1)[0]["generated_text"]
    return report

# Generate Reports for High-Risk Tools
df_high_risk = df_high_risk[df_high_risk["Risk_Score"] > 70]  # Tools with high risk
df_high_risk["Compliance_Report"] = df_high_risk.apply(
    lambda row: generate_report(row["Tool_Description"], row["Risk_Score"],
                                row["Days_Since_Last_Calibration"], row["Months_Remaining"],
                                row["Anomaly_Score_AE"]),
    axis=1
)

# Save Compliance Reports
df_high_risk[["Tool_Description", "Risk_Score", "Compliance_Report"]].to_csv("Compliance_Reports.csv", index=False)

# Display Sample Reports
df_high_risk[["Tool_Description", "Risk_Score", "Compliance_Report"]].head(5)

# Print Full Reports for High-Risk Tools

df_reports = pd.read_csv("Compliance_Reports.csv")

for index, row in df_reports.iterrows():
    print(f"\nðŸ”¹ Compliance Report for {row['Tool_Description']}:")
    print(f"Risk Score: {row['Risk_Score']:.2f}/100")
    print(f"Report:\n{row['Compliance_Report']}")
    print("="*80)  # Separator for readability

print("\n AI-Generated Compliance Reports Saved!")